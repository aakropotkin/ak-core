#! /usr/bin/env sh
# -*- mode: sh-shell; sh-shell: sh; -*-
# ============================================================================ #
#
#
# ---------------------------------------------------------------------------- #

as_me=cdecls;


# ---------------------------------------------------------------------------- #

function usage() {
  USAGE_MESSAGE="\
Usage: ${as_me} [OPTION...] FILE [-- CFLAGS]
Print declarations for C/C++ file.

Options:
  -C, --cxx      Process as C++ file.
  -D, --defines  Scape \`#ifdef' symbols and set all to 1.
  -h, --help     Print this help message.
  -- CFLAGS      Any flags provided after \`--' are passed as compiler flags.

Compiler tries \`CC' or \`CXX' if \`--cxx' was indicated, if unset these fall
back to \`gcc' and \`g++' respectively.";


  EXIT_STATUS=${1:-2};

  if test ${EXIT_STATUS} = 0; then
    echo "${USAGE_MESSAGE}";
  else
    echo "${USAGE_MESSAGE}" >&2;
  fi

  exit ${EXIT_STATUS};
}


# ---------------------------------------------------------------------------- #

# Option settings
TARGET='';
DO_CXX=no;
DEFINES=no;


# ---------------------------------------------------------------------------- #

# Split options
LONG_OPTS='-l help -l cxx -l defines'
OPTIONS="$( getopt -n ${as_me} ${LONG_OPTS} -o 'hCD' -- ${@}; )";
VALID_OPTIONS=${?};

if test ${VALID_OPTIONS} != 0; then
  echo "${as_me}: encountered invalid options" >&2;
  usage 2;
fi


# Parse options
eval set -- "${OPTIONS}";
while :
do
  case ${1} in
    -h|--help)
      usage 0;
      ;;
    -C|--cxx)
      DO_CXX=yes;
      ;;
    -D|--defines)
      DEFINES=yes;
      ;;
    --)
      shift;
      break;
      ;;
    *)
      if test -z ${TARGET}; then
        TARGET="${1}";
      else
        echo "${as_me}: unexpected option: ${1}" >&2;
        usage 2;
      fi
      ;;
  esac
  shift;
done


# ---------------------------------------------------------------------------- #

if test -z "${TARGET}"; then
  TARGET=${1};
  shift;
fi

TARGET="$( readlink -f ${TARGET}; )";


# Remaining args are considered compiler flags
if test ${#} -gt 0; then
  CFLAGS="${@}";
fi


# ---------------------------------------------------------------------------- #

# Select compiler
if test "x${DO_CXX}" = "xyes"; then
  CC="${CXX:-$( which g++; )}";
else
  CC="${CC:-$( which gcc; )}";
fi


# ---------------------------------------------------------------------------- #

function _getifnames() {
  ifnames ${TARGET} 2>/dev/null|cut -d' ' -f1;
}


# Scrape `#ifdef' symbols and set all of them to 1 using `-D<NAME>'.
# This is far from exhaustive considering that combinations of these symbols
# might be incompatible; but this covers a large number of use cases.
if test "x${DEFINES}" = "xyes"; then
  # FIXME: Permutate over defines
  #CFLAGS_SAVED="${CFLAGS}";
  for d in $( _getifnames; ); do
    CFLAGS+=" -D${d}";
  done
fi


# ---------------------------------------------------------------------------- #

# Make a temporary directory, and cd to it.
# Running the ADA spec generator often creates more files than the one targeted,
# so it's easier just to wipe out the directory.
TD=$( mktemp -dt ${as_me}-XXXXXX; );
trap "cd - 2>&1 1>/dev/null; rm -rf ${TD}; exit 1;" 1 2 3 13 15;
cd ${TD};


# ---------------------------------------------------------------------------- #

cat ${TARGET} > spec.c;
${CC} -c -fdump-ada-spec spec.c;

if ! test -r spec_c.ads; then
  echo "Failed to produce ADA Spec File" >&2;
  cd - 2>&1 1>/dev/null;
  rm -rf ${TD};
  exit 1;
fi

cat spec_c.ads|grep 'External_Name'|cut -d'"' -f2;


# ---------------------------------------------------------------------------- #

# Cleanup
cd - 2>&1 1>/dev/null;
rm -rf ${TD};


# ---------------------------------------------------------------------------- #



# ============================================================================ #
# vim: set filetype=sh :
