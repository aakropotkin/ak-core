#! /usr/bin/env bash
# ============================================================================ #
#
# Remove entries from \`compile_commands.json'.
#
# This script may be executed directly or sourced and invoked as `ccjs_remove'.
#
#
# ---------------------------------------------------------------------------- #

_OLD_OPTS="$( set +o; )";
set -eu;
set -o pipefail;


# ---------------------------------------------------------------------------- #

if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
  _as_me="ccjs_remove";
  _usage_remove_msg="USAGE: $_as_me [CMD-OPTIONS]... FILE...";
else
  _usage_remove_msg="USAGE: ${_as_me:-ccjs} [OPTIONS...] remove [CMD-OPTIONS]... \
FILE...";
fi

_usage_remove_msg="$_usage_remove_msg

Remove entries from \`compile_commands.json'.
";

_help_remove_msg="$_usage_remove_msg
When \`--in-place' is specified, \`compile_commands.json' is modified in-place
instead of being printed to \`STDOUT'.
Existing output file will be backed up by adding a \`~' suffix to its name.

ARGUMENTS
  FILE              The source file to be removed ( e.g. \`foo.c' ).

OPTIONS
  -h,--help         Print help message to STDOUT.
  -u,--usage        Print usage message to STDOUT.
  -i,--in-place     Add entry to \`compile_commands.json' in-place.

ENVIRONMENT
  CCJS_OUT            Output file. Default: \`./compile_commands.json'.
  JQ                  Command used as \`jq' executable.
  REALPATH            Command used as \`realpath' executable.
  MKTEMP              Command used as \`mktemp' executable.
";


# ---------------------------------------------------------------------------- #

usage_remove() {
  if [[ "${1:-}" = "-f" ]]; then
    echo "$_help_remove_msg";
  else
    echo "$_usage_remove_msg";
  fi
}


# ---------------------------------------------------------------------------- #

# @BEGIN_INJECT_UTILS@
: "${JQ:=jq}";
: "${REALPATH:=realpath}";
: "${MKTEMP:=mktemp}";
export JQ REALPATH MKTEMP;
# @END_INJECT_UTILS@


# ---------------------------------------------------------------------------- #

ccjs_remove() {
  _IN_PLACE='';
  declare -a _files;
  _files=();

  while [[ "$#" -gt 0 ]]; do
    case "$1" in
      -u|--usage)    usage_remove;    exit 0; ;;
      -h|--help)     usage_remove -f; exit 0; ;;
      -i|--in-place) _IN_PLACE=:;  ;;
      *)             _files+=( "$1" ); ;;
    esac
    shift;
  done


  # Get absolute paths.

  case "${CCJS_OUT:=$PWD/compile_commands.json}" in
    /*) :; ;;
    *) CCJS_OUT="$( "$REALPATH" "$CCJS_OUT"; )"; ;;
  esac

  if [[ -z "${_files[*]}" ]]; then
    echo "$_as_me: no input files were given" >&2;
    usage_remove >&2;
    exit 1;
  fi

  _FILES='';
  for _file in "${_files[@]}"; do
    case "$_file" in
      /*) :; ;;
      *) _file="$( "$REALPATH" -m "$_file"; )"; ;;
    esac
    _FILES="${_FILES:+$_FILES, }\"$_file\"";
  done
  _FILES="[$_FILES]";

  # If we are being run directly we don't have `mktmp_auto' available.
  if [[ -n "${_TMP_FILES+y}" ]]; then
    TMPFILE="$( mktmp_auto; )";
  else
    TMPFILE="$( $MKTEMP; )";
    _es=0;
    trap '_es="$?"; rm -f "$TMPFILE"; exit "$_es";' HUP TERM INT QUIT EXIT;
  fi

  #shellcheck disable=SC2016
  _JQ_CMD='map( select( .file as $FILE|
                        ( $_FILES|index( [$FILE] ) ) == null ) )';
  if [[ -n "$_IN_PLACE" ]]; then
    # Add the entry to the file, and remove old entry ( if present ).
    $JQ --argjson _FILES "$_FILES" "$_JQ_CMD" "$CCJS_OUT" > "$TMPFILE";
    # Backup the original file.
    mv "$CCJS_OUT" "$CCJS_OUT~";
    # Overwrite the original file.
    mv "$TMPFILE" "$CCJS_OUT";
  else
    $JQ --argjson _FILES "$_FILES" "$_JQ_CMD" "$CCJS_OUT";
  fi
}


# ---------------------------------------------------------------------------- #

# Restore options.
eval "$_OLD_OPTS";


# ---------------------------------------------------------------------------- #

# If we are being run directly, run the function.
if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
  ccjs_remove "$@";
else
  export -f ccjs_remove;
fi


# ---------------------------------------------------------------------------- #
#
#
#
# ============================================================================ #
