#! /usr/bin/env sh
# -*- mode: sh-mode; -*-
# ============================================================================ #


# ---------------------------------------------------------------------------- #

as_me=symlink-samedir-p;

# Arguments/Options
TARGET=;
VERBOSE=;
QUIET=;
ALLOW_ABSOLUTE=:;


# ---------------------------------------------------------------------------- #

usage() {
  echo "\
Usage: $as_me [OPTION...] FILE
Detect if a symlink points to a file in the same directory.
Exit 0 for true, 1 for false, or failure code.

Options:
  -v, --verbose         Print yes/no result to stdout.
  -q, --quiet           Do not print error messages.
  -a, --allow-absolute  Allow non-relative symlinks while checking.
  -h, --help            Print this help message.
";
}


# ---------------------------------------------------------------------------- #

perror() {
  EXIT_STATUS="$1";
  shift;
  test "$QUIET" && echo "$as_me: $*" > /dev/stderr;
  test "$EXIT_STATUS" != '-' && exit "$EXIT_STATUS";
}


# ---------------------------------------------------------------------------- #

LONG_OPTS='-l quiet -l allow-absolute -l help -l verbose';
# FIXME: assumes GNU implementation.
OPTIONS=$( getopt -n "$as_me" "$LONG_OPTS" -o 'qahv' -- "$@"; );
VALID_OPTIONS="$?";

if test "$VALID_OPTIONS" != 0; then
  perror - "encountered invalid options";
  usage > /dev/stderr;
  exit 1;
fi

eval set -- "$OPTIONS";
while :; do
  case "$1" in
    -v|--verbose)        VERBOSE=:; ;;
    -q|--quiet)          QUIET=:; ;;
    -a|--allow-absolute) ALLOW_ABSOLUTE=yes; ;;
    -h|--help)           usage; exit 0; ;;
    --)
        shift;
        break;
      ;;
    *)
        if test -z "$TARGET"; then
          TARGET="$1";
        else
          perror - "unexpected option: '$1'";
          usage > /dev/stderr;
          exit 1;
        fi
      ;;
  esac
  shift;
done
if test -z "$TARGET" && test "$#" -gt 0; then
  TARGET="$1";
  shift;
else
  perror - "You must provide a filename";
  usage > /dev/stderr;
  exit 2;
fi

# ---------------------------------------------------------------------------- #

if test ! -f "$TARGET"; then
  perror 3 "No such file or directory: $TARGET";
fi

if test ! -L "$TARGET"; then
  perror 4 "File $TARGET is not a symlink";
fi

LINK_PATH=$( stat --printf='%N' "$TARGET"|cut -d\' -f4; );

if test "$ALLOW_ABSOLUTE"; then
  if echo "$LINK_PATH"|grep -q '^/'; then
    perror 5 "Symlink $TARGET is non-relative";
  fi
fi

LINK_DIRNAME=$( dirname "$LINK_PATH"; );
if test "$LINK_DIRNAME" = '.'; then
  test "$VERBOSE" && echo yes;
  exit 0;
else
  if test "$ALLOW_ABSOLUTE" = yes; then
    TARGET_DIRNAME=$( dirname "$( readlink -f "$TARGET"; )"; );
    if test "$LINK_DIRNAME" = "$TARGET_DIRNAME"; then
      test "$VERBOSE" && echo yes;
      exit 0;
    fi
  fi
  test "$VERBOSE" && echo no;
  exit 1;
fi


# ---------------------------------------------------------------------------- #



# ============================================================================ #
# vim: set filetype=sh :
